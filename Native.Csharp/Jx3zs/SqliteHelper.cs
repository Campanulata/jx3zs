using Native.Csharp.App;using Native.Csharp.Model;using SQLite;using System;using System.Collections.Generic;using System.Data;using System.IO;using System.Linq;using System.Text;using System.Threading.Tasks;namespace Native.Csharp.Jx3zs{    public class SqliteHelper    {		private static SQLiteConnection Db_Event { get; set; }		public static void Initialize()		{			//string db_CachePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "data", Common.CqApi.GetLoginQQ().ToString(), "cache.db");			//string db_LogPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "data", Common.CqApi.GetLoginQQ().ToString(), "logv2_" + DateTime.Today.Year + DateTime.Today.Month.ToString("d2") + ".db");			string db_EventPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "data", Common.CqApi.GetLoginQQ().ToString(), "Jx3zs.db");			Db_Event = new SQLiteConnection(db_EventPath);		}		public static Server GetServer(long groupNum)		{			if (Db_Event == null) { Initialize(); }			if (Db_Event == null) { return null; }			else{ Db_Event.Execute("CREATE TABLE IF NOT EXISTS server(id integer PRIMARY KEY autoincrement, groupnum long, servername varchar(20));"); }			var result = Db_Event.Get<Server>($"SELECT * FROM server WHERE `groupnum` = {groupNum}");			return result;		}		public static int UpdateServer(long groupNum,string serverName)		{			if (Db_Event == null) { Initialize(); }			if (Db_Event == null) { return 0; }			else { Db_Event.Execute("CREATE TABLE IF NOT EXISTS server(id INTEGER PRIMARY KEY AUTOINCREMENT, groupnum long, servername varchar(20));"); }			var tempModel = Db_Event.Get<Server>($"SELECT * FROM server WHERE `groupnum` = {groupNum}");			if (tempModel?.Id > 0)			{				Db_Event.Delete(tempModel);			}			Server model = new Server() {GroupNum=groupNum,ServerName=serverName };			var result = Db_Event.Insert(model);			return result;		}	}}